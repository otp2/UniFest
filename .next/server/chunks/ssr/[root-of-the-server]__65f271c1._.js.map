{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/16308/Downloads/UniFest/src/components/CodeEntry.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CodeEntry.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CodeEntry.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/16308/Downloads/UniFest/src/components/CodeEntry.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CodeEntry.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CodeEntry.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/16308/Downloads/UniFest/src/lib/supabase.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\r\nimport { createBrowserClient } from '@supabase/ssr'\r\nimport { cookies } from 'next/headers'\r\n\r\nexport function createClient() {\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || \r\n                      'https://verbdhevzrtblphzbosr.supabase.co'\r\n  \r\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || \r\n                          'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZlcmJkaGV2enJ0YmxwaHpib3NyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgyMDk1ODksImV4cCI6MjA2Mzc4NTU4OX0.JV7CXCMWNBYRKfARk3yoodHad5a5QTKi1lu_xCwNNHQ'\r\n  \r\n  if (!supabaseUrl || !supabaseAnonKey) {\r\n    throw new Error('Missing Supabase environment variables')\r\n  }\r\n  \r\n  return createBrowserClient(supabaseUrl, supabaseAnonKey)\r\n}\r\n\r\nexport async function createServerSupabaseClient() {\r\n  // Try multiple ways to get the environment variables\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || \r\n                      process.env.SUPABASE_URL ||\r\n                      'https://verbdhevzrtblphzbosr.supabase.co'\r\n  \r\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || \r\n                          process.env.SUPABASE_ANON_KEY ||\r\n                          'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZlcmJkaGV2enJ0YmxwaHpib3NyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgyMDk1ODksImV4cCI6MjA2Mzc4NTU4OX0.JV7CXCMWNBYRKfARk3yoodHad5a5QTKi1lu_xCwNNHQ'\r\n  \r\n  if (!supabaseUrl || !supabaseAnonKey) {\r\n    console.error('Environment variables debug:', {\r\n      supabaseUrl: supabaseUrl ? 'SET' : 'MISSING',\r\n      supabaseAnonKey: supabaseAnonKey ? 'SET' : 'MISSING',\r\n      allEnvVars: Object.keys(process.env).filter(key => key.includes('SUPABASE')),\r\n      nodeEnv: process.env.NODE_ENV\r\n    })\r\n    throw new Error('Missing Supabase environment variables')\r\n  }\r\n  \r\n  const cookieStore = await cookies()\r\n\r\n  return createServerClient(\r\n    supabaseUrl,\r\n    supabaseAnonKey,\r\n    {\r\n      cookies: {\r\n        getAll() {\r\n          return cookieStore.getAll()\r\n        },\r\n        setAll(cookiesToSet) {\r\n          try {\r\n            cookiesToSet.forEach(({ name, value, options }) =>\r\n              cookieStore.set(name, value, options)\r\n            )\r\n          } catch {\r\n            // The `setAll` method was called from a Server Component.\r\n            // This can be ignored if you have middleware refreshing\r\n            // user sessions.\r\n          }\r\n        },\r\n      },\r\n    }\r\n  )\r\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;;;;AAEO,SAAS;IACd,MAAM,cAAc,QAAQ,GAAG,CAAC,wBAAwB,IACpC;IAEpB,MAAM,kBAAkB,QAAQ,GAAG,CAAC,6BAA6B,IACzC;IAExB,uCAAsC;;IAEtC;IAEA,OAAO,CAAA,GAAA,0KAAA,CAAA,sBAAmB,AAAD,EAAE,aAAa;AAC1C;AAEO,eAAe;IACpB,qDAAqD;IACrD,MAAM,cAAc,QAAQ,GAAG,CAAC,wBAAwB,IACpC,QAAQ,GAAG,CAAC,YAAY,IACxB;IAEpB,MAAM,kBAAkB,QAAQ,GAAG,CAAC,6BAA6B,IACzC,QAAQ,GAAG,CAAC,iBAAiB,IAC7B;IAExB,uCAAsC;;IAQtC;IAEA,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,EACtB,aACA,iBACA;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/16308/Downloads/UniFest/src/app/%5Bhouse%5D/page.tsx"],"sourcesContent":["import { notFound } from 'next/navigation'\r\nimport CodeEntry from '@/components/CodeEntry'\r\nimport { createServerSupabaseClient } from '@/lib/supabase'\r\n\r\n// Force dynamic rendering\r\nexport const dynamic = 'force-dynamic'\r\n\r\nexport default async function HouseCodePage({ params }: { params: Promise<{ house: string }> }) {\r\n  const supabase = await createServerSupabaseClient()\r\n  const { house: houseName } = await params\r\n  \r\n  const { data: house } = await supabase\r\n    .from('houses')\r\n    .select('*')\r\n    .eq('name', houseName.toUpperCase())\r\n    .eq('is_active', true)\r\n    .single()\r\n\r\n  if (!house) notFound()\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 to-black flex items-center justify-center\">\r\n      <CodeEntry house={house} />\r\n    </div>\r\n  )\r\n} "],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AACA;;;;;AAGO,MAAM,UAAU;AAER,eAAe,cAAc,EAAE,MAAM,EAA0C;IAC5F,MAAM,WAAW,MAAM,CAAA,GAAA,sHAAA,CAAA,6BAA0B,AAAD;IAChD,MAAM,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM;IAEnC,MAAM,EAAE,MAAM,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,UACL,MAAM,CAAC,KACP,EAAE,CAAC,QAAQ,UAAU,WAAW,IAChC,EAAE,CAAC,aAAa,MAChB,MAAM;IAET,IAAI,CAAC,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAEnB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,+HAAA,CAAA,UAAS;YAAC,OAAO;;;;;;;;;;;AAGxB","debugId":null}}]
}