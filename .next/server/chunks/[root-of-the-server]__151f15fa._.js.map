{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/16308/Downloads/UniFest/src/lib/supabase.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\r\nimport { createBrowserClient } from '@supabase/ssr'\r\nimport { cookies } from 'next/headers'\r\n\r\nexport function createClient() {\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || \r\n                      'https://verbdhevzrtblphzbosr.supabase.co'\r\n  \r\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || \r\n                          'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZlcmJkaGV2enJ0YmxwaHpib3NyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgyMDk1ODksImV4cCI6MjA2Mzc4NTU4OX0.JV7CXCMWNBYRKfARk3yoodHad5a5QTKi1lu_xCwNNHQ'\r\n  \r\n  if (!supabaseUrl || !supabaseAnonKey) {\r\n    throw new Error('Missing Supabase environment variables')\r\n  }\r\n  \r\n  return createBrowserClient(supabaseUrl, supabaseAnonKey)\r\n}\r\n\r\nexport async function createServerSupabaseClient() {\r\n  // Try multiple ways to get the environment variables\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || \r\n                      process.env.SUPABASE_URL ||\r\n                      'https://verbdhevzrtblphzbosr.supabase.co'\r\n  \r\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || \r\n                          process.env.SUPABASE_ANON_KEY ||\r\n                          'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZlcmJkaGV2enJ0YmxwaHpib3NyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgyMDk1ODksImV4cCI6MjA2Mzc4NTU4OX0.JV7CXCMWNBYRKfARk3yoodHad5a5QTKi1lu_xCwNNHQ'\r\n  \r\n  if (!supabaseUrl || !supabaseAnonKey) {\r\n    console.error('Environment variables debug:', {\r\n      supabaseUrl: supabaseUrl ? 'SET' : 'MISSING',\r\n      supabaseAnonKey: supabaseAnonKey ? 'SET' : 'MISSING',\r\n      allEnvVars: Object.keys(process.env).filter(key => key.includes('SUPABASE')),\r\n      nodeEnv: process.env.NODE_ENV\r\n    })\r\n    throw new Error('Missing Supabase environment variables')\r\n  }\r\n  \r\n  const cookieStore = await cookies()\r\n\r\n  return createServerClient(\r\n    supabaseUrl,\r\n    supabaseAnonKey,\r\n    {\r\n      cookies: {\r\n        getAll() {\r\n          return cookieStore.getAll()\r\n        },\r\n        setAll(cookiesToSet) {\r\n          try {\r\n            cookiesToSet.forEach(({ name, value, options }) =>\r\n              cookieStore.set(name, value, options)\r\n            )\r\n          } catch {\r\n            // The `setAll` method was called from a Server Component.\r\n            // This can be ignored if you have middleware refreshing\r\n            // user sessions.\r\n          }\r\n        },\r\n      },\r\n    }\r\n  )\r\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;;;;AAEO,SAAS;IACd,MAAM,cAAc,QAAQ,GAAG,CAAC,wBAAwB,IACpC;IAEpB,MAAM,kBAAkB,QAAQ,GAAG,CAAC,6BAA6B,IACzC;IAExB,uCAAsC;;IAEtC;IAEA,OAAO,CAAA,GAAA,4KAAA,CAAA,sBAAmB,AAAD,EAAE,aAAa;AAC1C;AAEO,eAAe;IACpB,qDAAqD;IACrD,MAAM,cAAc,QAAQ,GAAG,CAAC,wBAAwB,IACpC,QAAQ,GAAG,CAAC,YAAY,IACxB;IAEpB,MAAM,kBAAkB,QAAQ,GAAG,CAAC,6BAA6B,IACzC,QAAQ,GAAG,CAAC,iBAAiB,IAC7B;IAExB,uCAAsC;;IAQtC;IAEA,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,EACtB,aACA,iBACA;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/16308/Downloads/UniFest/src/app/api/validate-code/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { createServerSupabaseClient } from '@/lib/supabase'\r\n\r\n// Force dynamic rendering\r\nexport const dynamic = 'force-dynamic'\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const { code, houseId } = await request.json()\r\n    const supabase = await createServerSupabaseClient()\r\n\r\n    const { data: house } = await supabase\r\n      .from('houses')\r\n      .select('access_code')\r\n      .eq('id', houseId)\r\n      .single()\r\n\r\n    if (!house) {\r\n      return NextResponse.json({ valid: false, error: 'House not found' }, { status: 404 })\r\n    }\r\n\r\n    const isValid = house.access_code === code.toUpperCase()\r\n\r\n    return NextResponse.json({ valid: isValid })\r\n  } catch (error) {\r\n    console.error('Code validation error:', error)\r\n    return NextResponse.json({ valid: false, error: 'Server error' }, { status: 500 })\r\n  }\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAGO,MAAM,UAAU;AAEhB,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI;QAC5C,MAAM,WAAW,MAAM,CAAA,GAAA,wHAAA,CAAA,6BAA0B,AAAD;QAEhD,MAAM,EAAE,MAAM,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,UACL,MAAM,CAAC,eACP,EAAE,CAAC,MAAM,SACT,MAAM;QAET,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;gBAAO,OAAO;YAAkB,GAAG;gBAAE,QAAQ;YAAI;QACrF;QAEA,MAAM,UAAU,MAAM,WAAW,KAAK,KAAK,WAAW;QAEtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAQ;IAC5C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAAO,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IAClF;AACF","debugId":null}}]
}